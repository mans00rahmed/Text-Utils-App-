{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","id","type","Navbar","props","mode","to","title","handler","about","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","length","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","a","body","backgroundColor","String","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dde4d6ad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n      <div className=\"conatiner\">\r\n          <h2 className=\"display-5\">About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link , BrowserRouter as Router} from \"react-router-dom\"\r\nimport about from \"./About\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <Router>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className = \"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\" >\r\n                  Home\r\n                </Link>\r\n                </li>\r\n                <li className= \"nav-items\">\r\n                <Link className=\"nav-link\" to=\"/about\" handler={about}>\r\n                  About\r\n                </Link>\r\n                </li>\r\n            </div>\r\n          </div>\r\n          <div className=\"contatiner\">\r\n            <input id=\"inpColor\" type=\"text\" placeholder=\"Theme Color (Dark)\" />\r\n          </div>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Theme\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      </Router>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text Upper Cased!\", \"success\");\r\n  };\r\n\r\n  const handleDownClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text Lower Cased!\", \"success\");\r\n  };\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 9999);\r\n    navigator.clipboard.writeText(text.value);\r\n\r\n    props.showAlert(\"Copied to Clipbaord\", \"info\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"danger\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed From Text\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"conatiner\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1 className=\"display-5\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            id=\"myBox\"\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div>\r\n          <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n            Change Text To Upper Case\r\n          </button>\r\n\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>\r\n            Change Text To Lower Case\r\n          </button>\r\n\r\n          <button className=\"btn btn-danger mx-1\" onClick={handleClearClick}>\r\n            Clear Text\r\n          </button>\r\n\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n            Clear Spaces Extra\r\n          </button>\r\n\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n            Copy Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n\r\n      <div\r\n        className=\"conatiner-d-flex align-content-center flex-wrap\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1 className=\"display-6\">Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters.\r\n        </p>\r\n        <p>\r\n          Need {0.008 * text.split(\" \").length} minutes to read this paragraph.\r\n        </p>\r\n        <h3 className=\"display-6\">Perview</h3>\r\n        <p>{text.length > 0 ? text : \"Enter something to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props.alert.msg}</strong>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  \nconst toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      var a = document.getElementById(\"inpColor\").value;\n      if (a === \"\") {\n        document.body.style.backgroundColor = \"Black\";\n        showAlert(\"Dark theme mode has been enabled\", \"success\");\n      } else {\n        document.body.style.backgroundColor = String(a);\n        showAlert(`${a} mode has been enabled`, \"success\");\n      }\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"White\";\n      showAlert(\"dark mode has been disbled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar title=\"Text Utilities\" mode={mode} toggleMode={toggleMode} />\n\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter The Text To Analyze... \"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}